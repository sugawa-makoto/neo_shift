// // Youbi_Userを１週間分に整形
    // public function create_shift_one_week() {
    //     //carbon定義
    //     $carbon = Carbon::now();

    //     //carbon展開
    //     $now_year = $carbon->year; //今年
    //     $now_month = $carbon->month; //今月
    //     $next_month =  $now_month+1;// 来月
    //     $several_days = $carbon->daysInMonth;//今月の日数
    //     // 来月の最初の日を取得
    //     $next_month_first = Youbi_User::where('year',$now_year)->where('month', $next_month)->first();
    //     // 期間指定
    //     $start_day = new Carbon($next_month_first->day);
    //     $end_day = $start_day->addDays(6);
    //     // 期間指定取得開始
    //     $users = DB::table('youbi_user');// テーブルの指定
    //     $datas = $users->whereBetween('day', [$next_month_first->day, $end_day])->get();// 取得
    //     foreach($datas as $data) {
    //         $save = new Youbi_User_One_Week;
    //         $save->day = $data->day;
    //         $save->year = $data->year;
    //         $save->month = $data->month;
    //         $save->youbi_id = $data->youbi_id;
    //         $save->youbi_name = $data->youbi_name;
    //         $save->user_id = $data->user_id;
    //         $save->user_name = $data->user_name;
    //         $save->save();
    //     }
    // }


    //youbi_userをさに曜日ごとにまとめる（ただの曜日ではなく何年何月何日の何曜日ということ）
    public function youbi_user_week_group(){
        $carbon = Carbon::now();
        //carbon展開
        $now_year = $carbon->year; // 今年
        $now_month = $carbon->month; // 今月
        $next_month =  $now_month+1;// 来月
        $weeks = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "satday"];
        foreach($weeks as $week){
            $week_groups = Youbi_User::where('year', $now_year)->where('month', $next_month)->where('youbi_name', $week)->get();
            foreach($week_groups as $week_group) {
                $save = new Youbi_User_Group;
                $save->day = $week_group->day;
                $save->year = $week_group->year;
                $save->month = $week_group->month;
                $save->youbi_id = $week_group->youbi_id;
                $save->youbi_name = $week_group->youbi_name;
                $save->user_id = $week_group->user_id;
                $save->user_name = $week_group->user_name;
                $save->save();
            }
        }
    }



<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="{{ asset('css/app.css') }}" rel="stylesheet">
    <link href="{{ asset('css/calendar.css') }}" rel="stylesheet">
    <title>times_table_create</title>
</head>
<body>

    <form method="post" action="/user_add_form" enctype="multipart/form-data">
        {{ csrf_field() }}
    <!-- 従業員氏名 -->
    <div class="employee_name">
        <label>従業員氏名</label>
        <input type="text" name="employee_name" placeholder="必須項目">
    </div>
    <!-- 従業員ID決定 -->
    <div class="employee_ID">
        <button id="button">従業員ID生成</button>
        <input type="text" name="length" placeholder="" id="employee_ID">
    </div>
    <!-- 性別 -->
    <div class="gender">
        <label>性別</label>
        <select class="gender_select" id="gender_id" name="gender">
            <option value="-">選択してください</option>
            <option value="男">男</option>
            <option value="女">女</option>
        </select>
    </div>
    <!-- 年齢 -->
    <div class="age">
        <label>年齢</label>
        <select class="age_select" id="age_id" name="age">
            <option value="-">選択してください</option>
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
            <option value="10">10</option>
            <option value="11">11</option>
            <option value="12">12</option>
            <option value="13">13</option>
            <option value="14">14</option>
            <option value="15">15</option>
            <option value="16">16</option>
            <option value="17">17</option>
            <option value="18">18</option>
            <option value="19">19</option>
            <option value="20">20</option>
            <option value="21">21</option>
            <option value="22">22</option>
            <option value="23">23</option>
            <option value="24">24</option>
            <option value="25">25</option>
            <option value="26">26</option>
            <option value="27">27</option>
            <option value="28">28</option>
            <option value="29">29</option>
            <option value="30">30</option>
            <option value="31">31</option>
            <option value="32">32</option>
            <option value="33">33</option>
            <option value="34">34</option>
            <option value="35">35</option>
            <option value="36">36</option>
            <option value="37">37</option>
            <option value="38">38</option>
            <option value="39">39</option>
            <option value="40">40</option>
            <option value="41">41</option>
            <option value="42">42</option>
            <option value="43">43</option>
            <option value="44">44</option>
            <option value="45">45</option>
            <option value="46">46</option>
            <option value="47">47</option>
            <option value="48">48</option>
            <option value="49">49</option>
            <option value="50">50</option>
            <option value="51">51</option>
            <option value="52">52</option>
            <option value="53">53</option>
            <option value="54">54</option>
            <option value="55">55</option>
            <option value="56">56</option>
            <option value="57">57</option>
            <option value="58">58</option>
            <option value="59">59</option>
            <option value="60">60</option>
            <option value="61">61</option>
            <option value="62">62</option>
            <option value="63">63</option>
            <option value="64">64</option>
            <option value="65">65</option>
            <option value="66">66</option>
            <option value="67">67</option>
            <option value="68">68</option>
            <option value="69">69</option>
            <option value="70">70</option>
            <option value="71">71</option>
            <option value="72">72</option>
            <option value="73">73</option>
            <option value="74">74</option>
            <option value="75">75</option>
            <option value="76">76</option>
            <option value="77">77</option>
            <option value="78">78</option>
            <option value="79">79</option>
            <option value="80">80</option>
            <option value="81">81</option>
            <option value="82">82</option>
            <option value="83">83</option>
            <option value="84">84</option>
            <option value="85">85</option>
            <option value="86">86</option>
            <option value="87">87</option>
            <option value="88">88</option>
            <option value="89">89</option>
            <option value="90">90</option>
            <option value="91">91</option>
            <option value="92">92</option>
            <option value="93">93</option>
            <option value="94">94</option>
            <option value="95">95</option>
            <option value="96">96</option>
            <option value="97">97</option>
            <option value="98">98</option>
            <option value="99">99</option>
            <option value="100">100</option>
        </select>歳
    </div>
    <!-- 曜日指定ラジオボタン -->
    <div class="youbi">
        <label>曜日選択</label>
        <input type="radio" name="mon" value="月曜日"> 月曜日
        <input type="radio" name="tue" value="火曜日"> 火曜日
        <input type="radio" name="wed" value="水曜日"> 水曜日
        <input type="radio" name="thu" value="木曜日"> 木曜日
        <input type="radio" name="fri" value="金曜日"> 金曜日
        <input type="radio" name="sat" value="土曜日"> 土曜日
        <input type="radio" name="sun" value="日曜日"> 日曜日
    </div>
    <!-- 管理者が用意したシフト選択 -->
    <div class="midnight">
        <label>シフト選択1</label>
        <select class="midnight_select" id="midnight_id" name="gender">
            <option value="-">選択してください</option>
            @foreach($times_data as $d)
                <option value="{{$d->name}}">{{$d->name}}</option>
            @endforeach
        </select>
    </div>
    <!-- 管理者が用意したシフト選択 -->
    <div class="midnight">
        <label>シフト選択2</label>
        <select class="midnight_select" id="midnight_id" name="gender">
            <option value="-">選択してください</option>
            @foreach($times_data as $d)
                <option value="{{$d->name}}">{{$d->name}}</option>
            @endforeach
        </select>
    </div>
    <!-- 管理者が用意したシフト選択 -->
    <div class="midnight">
        <label>シフト選択3</label>
        <select class="midnight_select" id="midnight_id" name="gender">
            <option value="-">選択してください</option>
            @foreach($times_data as $d)
                <option value="{{$d->name}}">{{$d->name}}</option>
            @endforeach
        </select>
    </div>
    <!-- 管理者が用意したシフト選択 -->
    <div class="midnight">
        <label>シフト選択4</label>
        <select class="midnight_select" id="midnight_id" name="gender">
            <option value="-">選択してください</option>
            @foreach($times_data as $d)
                <option value="{{$d->name}}">{{$d->name}}</option>
            @endforeach
        </select>
    </div>
    <!-- 管理者が用意したシフト選択 -->
    <div class="midnight">
        <label>シフト選択5</label>
        <select class="midnight_select" id="midnight_id" name="gender">
            <option value="-">選択してください</option>
            @foreach($times_data as $d)
                <option value="{{$d->name}}">{{$d->name}}</option>
            @endforeach
        </select>
    </div>
    <!-- 週夜勤日数 -->
    <div class="midnight">
        <label>週夜勤日数</label>
        <select class="midnight_select" id="midnight_id" name="gender">
            <option value="-">選択してください</option>
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
        </select>日
    </div>
    <!-- continuous_midnight -->
    <div class="continuous_midnight">
        <label>連続夜勤可否</label>
        <select class="continuous_midnight_select" id="continuous_midnight_id" name="continuous_midnight">
            <option value="OK">OK</option>
            <option value="NG">NG</option>
        </select>
    </div>
    <!-- 送信 -->
    <p><input type="submit" value="送信する"></p>




    //各従業員別に勤務日には赤い丸などを出したい
    //タップしてOKボタンを押すと休み希望が取れる
    //休み希望の取り消しもできる
    <!-- 試作カレンダー -->
    <button id="prev" type="button">前の月</button>
    <button id="next" type="button">次の月</button>
    <div id="calendar"></div>

    <!-- スクリプト -->
    <script>
        const weeks = ['日', '月', '火', '水', '木', '金', '土']
        const date = new Date()
        let year = date.getFullYear()
        let month = date.getMonth() + 1
        const config = {
            show: 1,
        }

        function showCalendar(year, month) {
            for ( i = 0; i < config.show; i++) {
                const calendarHtml = createCalendar(year, month)//createCalendarは何をしているのか？？？
                const sec = document.createElement('section')
                sec.innerHTML = calendarHtml
                document.querySelector('#calendar').appendChild(sec)

                month++
                if (month > 12) {
                    year++
                    month = 1
                }
            }
        }

        function createCalendar(year, month) {
            const startDate = new Date(year, month - 1, 1) // 月の最初の日を取得
            const endDate = new Date(year, month,  0) // 月の最後の日を取得
            const endDayCount = endDate.getDate() // 月の末日
            const lastMonthEndDate = new Date(year, month - 1, 0) // 前月の最後の日の情報
            const lastMonthendDayCount = lastMonthEndDate.getDate() // 前月の末日
            const startDay = startDate.getDay() // 月の最初の日の曜日を取得
            let dayCount = 1 // 日にちのカウント
            let calendarHtml = '' // HTMLを組み立てる変数

            calendarHtml += '<h1>' + year  + '/' + month + '</h1>'
            calendarHtml += '<table>'

            // 曜日の行を作成
            for (let i = 0; i < weeks.length; i++) {
                calendarHtml += '<td>' + weeks[i] + '</td>'
            }

            for (let w = 0; w < 6; w++) {
                calendarHtml += '<tr>'

                for (let d = 0; d < 7; d++) {
                    if (w == 0 && d < startDay) {
                        // 1行目で1日の曜日の前
                        let num = lastMonthendDayCount - startDay + d + 1
                        calendarHtml += '<td class="is-disabled">' + num + '</td>'
                    } else if (dayCount > endDayCount) {
                        // 末尾の日数を超えた
                        let num = dayCount - endDayCount
                        calendarHtml += '<td class="is-disabled">' + num + '</td>'
                        dayCount++
                    } else {
               calendarHtml += `<td class="calendar_td" data-date="${year}/${month}/${dayCount}">${dayCount}</td>`
                        dayCount++
                    }
                }
                calendarHtml += '</tr>'
            }
            calendarHtml += '</table>'

            return calendarHtml
        }

        function moveCalendar(e) {
            document.querySelector('#calendar').innerHTML = ''

            if (e.target.id === 'prev') {
                month--

                if (month < 1) {
                    year--
                    month = 12
                }
            }

            if (e.target.id === 'next') {
                month++

                if (month > 12) {
                    year++
                    month = 1
                }
            }

            showCalendar(year, month)
        }


        document.querySelector('#prev').addEventListener('click', moveCalendar)
        document.querySelector('#next').addEventListener('click', moveCalendar)

        document.addEventListener("click", function(e) {

            if(e.target.classList.contains("calendar_td")) {

                alert('クリックした日付は' + e.target.dataset.date + 'です')
            }
        });

        showCalendar(year, month)
    </script>





    <script>
        // 要素を取得
        var button = document.getElementById("button");

        //ボタンをクリックしたときの処理
        button.addEventListener("click", function(e){
            e.preventDefault();
            //使用文字の定義
            var str = "abcdefghijklmnopqrstuvwxyz0123456789";
            //桁数の定義
            var len = 8;
            //ランダムな文字列の生成
            var result = "";
            for(var i=0;i<len;i++){
                result += str.charAt(Math.floor(Math.random() * str.length));
            }
            // 足し算の結果を別の入力フォームに表示
            var work_time = document.getElementById("employee_ID");
            work_time.value = result;
        });
    </script>

</body>
</html>






<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="{{ asset('css/app.css') }}" rel="stylesheet">
    <title>times_table_create</title>
</head>
<body>

    <form method="post" action="/company_setting_necessary_form_post" enctype="multipart/form-data" class="repeater">
        {{ csrf_field() }}
    <div id="input_pluralBox" data-formno="0">
        <div id="input_plural">
            <!-- シフト名選択 -->
            <label>シフト名選択</label>
            <select class="input_shift" id="input_shift_id" name="input_shift[0]">
                <option value="-">-</option>
                @foreach($loop_time as $q)
                    <option value="{{$q->name}}">{{$q->name}}</option>
                @endforeach
            </select>
            <!-- 必要人数指定 -->
            <label>基本必要人数指定</label>
            <select name="select_necessary[0]">
                <option value="">-</option>
                <option value="0">0</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
                <option value="11">11</option>
                <option value="12">12</option>
                <option value="13">13</option>
                <option value="14">14</option>
                <option value="15">15</option>
                <option value="16">16</option>
                <option value="17">17</option>
                <option value="18">18</option>
                <option value="19">19</option>
                <option value="20">20</option>
                <option value="21">21</option>
                <option value="22">22</option>
                <option value="23">23</option>
                <option value="24">24</option>
                <option value="25">25</option>
                <option value="26">26</option>
                <option value="27">27</option>
                <option value="28">28</option>
                <option value="29">29</option>
                <option value="30">30</option>
                <option value="31">31</option>
                <option value="32">32</option>
                <option value="33">33</option>
                <option value="34">34</option>
                <option value="35">35</option>
                <option value="36">36</option>
                <option value="37">37</option>
                <option value="38">38</option>
                <option value="39">39</option>
                <option value="40">40</option>
                <option value="41">41</option>
                <option value="42">42</option>
                <option value="43">43</option>
                <option value="44">44</option>
                <option value="45">45</option>
                <option value="46">46</option>
                <option value="47">47</option>
                <option value="48">48</option>
                <option value="49">49</option>
                <option value="50">50</option>
                <option value="51">51</option>
                <option value="52">52</option>
                <option value="53">53</option>
                <option value="54">54</option>
                <option value="55">55</option>
                <option value="56">56</option>
                <option value="57">57</option>
                <option value="58">58</option>
                <option value="59">59</option>
                <option value="60">60</option>
                <option value="61">61</option>
                <option value="62">62</option>
                <option value="63">63</option>
                <option value="64">64</option>
                <option value="65">65</option>
                <option value="66">66</option>
                <option value="67">67</option>
                <option value="68">68</option>
                <option value="69">69</option>
                <option value="70">70</option>
                <option value="71">71</option>
                <option value="72">72</option>
                <option value="73">73</option>
                <option value="74">74</option>
                <option value="75">75</option>
                <option value="76">76</option>
                <option value="77">77</option>
                <option value="78">78</option>
                <option value="79">79</option>
                <option value="80">80</option>
                <option value="81">81</option>
                <option value="82">82</option>
                <option value="83">83</option>
                <option value="84">84</option>
                <option value="85">85</option>
                <option value="86">86</option>
                <option value="87">87</option>
                <option value="88">88</option>
                <option value="89">89</option>
                <option value="90">90</option>
                <option value="91">91</option>
                <option value="92">92</option>
                <option value="93">93</option>
                <option value="94">94</option>
                <option value="95">95</option>
                <option value="96">96</option>
                <option value="97">97</option>
                <option value="98">98</option>
                <option value="99">99</option>
                </select>人
            <input type="button" value="項目追加" class="add pluralBtn">
            <input type="button" value="－" class="del pluralBtn">
        </div>
    </div>
    <!-- 送信 -->
    <p><input type="submit" value="送信する"></p>
    <!-- スクリプト -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type="text/javascript">

    </script>
</body>
</html>







<!-- スクリプト -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script type="text/javascript">
var frm_cnt = 0;
$(document).on("click", ".add", function() {
frm_cnt++;
$(this).parent().clone(true).insertAfter($(this).parent()).find('select').each(function(idx, obj) {
            $(obj).attr({
                name: $(obj).attr('name').replace(/\[[0-9]+\]+$/, '[' + frm_cnt + ']')
            });
            $(obj).val('');
        });;
});
$(document).on("click", ".del", function() {
    var target = $(this).parent();
    if (target.parent().children().length > 1) {
        target.remove();
    }
});
</script>





<!-- スクリプト -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script type="text/javascript">
var frm_cnt = 0;
$(document).on("click", ".add", function() {
    frm_cnt++;
    //押したその.addの親要素（#input_plural）をcloneしてその後ろに追加する。
    //追加時に内容変更する
    //.each
    $(this).parent().clone(true).insertAfter($(this).parent()).find('select').each(function(idx, obj) {
        console.log(obj);
        //$(obj)で要素を取得
        //.attrでname属性取得
        //.replaceでname属性を置換
        //正規表現で範囲指定\[　　\]は[]をエスケープ表現。
        //[0-9]は「０〜９の間で一致するもの」という範囲指定
        //*は桁数許容解除
        //$は、数字であることを指定
        //上記の条件にマッチするものをカウンターの値で置換
        $(obj).attr({
            name: $(obj).attr('name').replace(/\[[0-9]*\]*$/, '[' + frm_cnt + ']')
        });
    });
});
$(document).on("click", ".del", function() {
    var removeObj = $(this).parent();
});
</script>



    <script>
        $('.del').click(function() {
            var removeObj = $(this).parent();
            removeObj.fadeOut('fast', function(){
                removeObj.remove();
                // 番号振り直し
                frm_cnt = 0;
                $('#input_plural\\[' + frm_cnt + '\\]').each(function(index, formObj) {

                    if($(formObj).attr('id') != 'input_plural[0]') {
                        frm_cnt++;
                        $(formObj).attr('id', 'input_plural[' + frm_cnt + ']').find('select').each(function(idx, obj){
                            $(obj).attr({
                                name: $(obj).attr('name').replace(/\[[0-9]\]+$/, '[' + frm_cnt + ']')
                            });
                        });
                    }
                });
            });
        })
    </script>




        //シフトネームを回す
        $loop_shift_names = Time::select('name')->get();
        foreach($loop_shift_names as $loop_shift_name){
            //dateを回す
            $loop_dates = Date::where('year', $now_year)->where('month', $next_month)->get();
            foreach($loop_dates as $loop_date) {
                //usersテーブル内で指定カラムに１が立っている者の中で日毎のデフォルト指定数分ランダムに選出
                $randoms = Shift_User_Who::where('day', $loop_date->day_en)->where('shift', $loop_shift_name->name)->inRandomOrder()->take(5)->pluck('staff_name');
                foreach($randoms as $random){
                    $save = new Random_Shift;
                    $save->day = $loop_date->day_en;
                    $save->year = $loop_date->year;
                    $save->month = $loop_date->month;
                    $save->date = $loop_date->date;
                    $save->staff_name = $random;
                    $save->save();
                }
            }
        }




        //曜日のループ
        $weeks = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "satday"];
        foreach($weeks as $week){
            //各曜日ごとの働ける人リスト
            $find_user_ids = Youbi_User_One_Week::where('year',$now_year)->where('month', $next_month)->where('youbi_name', $week)->pluck('user_id');
            //一人ひとりが所属しているシフトリスト
            foreach($find_user_ids as $find_user_id) {
                $find_user_shift = User::find($find_user_id);
                $shifts = ["shift1", "shift2", "shift3", "shift4", "shift5"];
                foreach($shifts as $shift) {
                    $shift_user = new Shift_User;
                    $shift_user->week = $week;
                    $shift_user->user_id = $find_user_id;
                    $shift_user->shift = $find_user_shift->$shift;
                    $shift_user->save();
                }
            }
        }














    //候補リストを作る
    public function shift_user_who() {
        $carbon = Carbon::now();
        //carbon展開
        $now_year = $carbon->year; // 今年
        $now_month = $carbon->month; // 今月
        $next_month =  $now_month+1;// 来月

        //今年の来月の何日の何曜日は誰たちが入れるの？yobi_userでわかる
        //その中で例えば朝フロントは誰がするの？例えば水曜日の朝フロント担当者
        //youbi_userのループで曜日を出力
        //shift_userでその曜日と調べたい曜日名で検索
        //答えが出る

        //来月分の働けるよリスト取得
        $find_youbi_user_next_months = Youbi_User::where('year', $now_year)->where('month', $next_month)->get();
        //１日レコードずつ回す
        foreach($find_youbi_user_next_months as $find_youbi_user_next_month) {
            //そのレコードのuser_idと$week（曜日名）を変数に入れておく
            $user_id = $find_youbi_user_next_month->user_id;
            $user_name = $find_youbi_user_next_month->user_name;
            $week = $find_youbi_user_next_month->youbi_name;
            $day = $find_youbi_user_next_month->day;
            $year = $find_youbi_user_next_month->year;
            $month = $find_youbi_user_next_month->month;
            // 今年の来月の何日の何曜日は誰がどのシフトに入れるかのまとめリストができる
            $find_shift_user_whos = Shift_User::where('user_id', $user_id)->where('week', $week)->get();
            foreach($find_shift_user_whos as $find_shift_user_who) {
                $save = new Shift_User_Who;
                $save->day = $day;
                $save->year = $year;
                $save->month = $month;
                $save->youbi = $week;
                $save->shift = $find_shift_user_who->shift;
                $save->staff_name = $user_name;
                $save->save();
            }
        }
    }
    //今月分
    //何月何日何曜日の〇〇シフトに入れる候補リスト
    public function shift_who() {
        $carbon = Carbon::now();
        //carbon展開
        $now_year = $carbon->year; // 今年
        $now_month = $carbon->month; // 今月
        //既にデータが存在するなら処理をしない
        $find_date_first = Date::where('year',$now_year)->where('month',$now_month)->first();
        $find_same = Shift_Who::where('year',$now_year)->where('day', $find_date_first->day_en)->exists();
        if(empty($find_same)) {
            //　何月何日何曜日の〇〇シフトは誰が入れるか１日ずつ検索する
            $find_now_month_dates = Date::where('year', $now_year)->where('month', $now_month)->get();
            foreach($find_now_month_dates as $find_now_month_date) {
                //検索項目
                //年
                $year = $find_now_month_date->year;
                //英語表記の日付
                $day_en = $find_now_month_date->day_en;

                $loop_shift_names = Time::all();
                foreach($loop_shift_names as $loop_shift_name){
                    //シフト名
                    $shift_name = $loop_shift_name->name;
                    //Shift_User_Who内検索
                    $find_shift_user_whos = Shift_User_Who::where('year', $year)->where('day', $day_en)->where('shift', $shift_name)->get();
                    foreach($find_shift_user_whos as $find_shift_user_who) {
                        //抽出
                        $record_year = $find_shift_user_who->year;
                        $record_day = $find_shift_user_who->day;
                        $record_shift = $find_shift_user_who->shift;
                        $record_staff_name = $find_shift_user_who->staff_name;
                        //条件付き保存
                        $record = new Shift_Who;
                        $record->year = $record_year;
                        $record->day = $record_day;
                        $record->shift = $record_shift;
                        $record->staff_name = $record_staff_name;
                        $record->save();
                    }
                }
            }
        }
    }
    //来月分
    //何月何日何曜日の〇〇シフトに入れる候補リスト
    public function shift_who_next() {
        $carbon = Carbon::now();
        //carbon展開
        $now_year = $carbon->year; // 今年
        $now_month = $carbon->month; // 今月
        $next_month =  $now_month+1;// 来月
        //既にデータが存在するなら処理をしない
        $find_date_first = Date::where('year',$now_year)->where('month',$next_month)->first();
        $find_same = Shift_Who::where('year',$now_year)->where('day', $find_date_first->day_en)->exists();
        if(empty($find_same)) {

            //　何月何日何曜日の〇〇シフトは誰が入れるか１日ずつ検索する
            $find_next_month_dates = Date::where('year', $now_year)->where('month', $next_month)->get();
            foreach($find_next_month_dates as $find_next_month_date) {
                //検索項目
                //年
                $year = $find_next_month_date->year;
                //英語表記の日付
                $day_en = $find_next_month_date->day_en;

                $loop_shift_names = Time::all();
                foreach($loop_shift_names as $loop_shift_name) {
                    //シフト名
                    $shift_name = $loop_shift_name->name;
                    //Shift_User_Who内検索
                    $find_shift_user_whos = Shift_User_Who::where('year', $year)->where('day', $day_en)->where('shift', $shift_name)->get();
                    foreach($find_shift_user_whos as $find_shift_user_who){
                        //抽出
                        $record_year = $find_shift_user_who->year;
                        $record_day = $find_shift_user_who->day;
                        $record_shift = $find_shift_user_who->shift;
                        $record_staff_name = $find_shift_user_who->staff_name;
                        //条件付き保存
                        $record = new Shift_Who;
                        $record->year = $record_year;
                        $record->day = $record_day;
                        $record->shift = $record_shift;
                        $record->staff_name = $record_staff_name;
                        $record->save();
                    }
                }
            }
        }
    }
